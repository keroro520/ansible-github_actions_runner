---
- name: Get registration token (RUN ONCE)
  uri:
    url: "{{ github_api_url }}/orgs/{{ github_owner | default(github_account) }}/actions/runners/registration-token"
    headers:
      Authorization: "token {{ access_token }}"
      Accept: "application/vnd.github.v3+json"
    method: POST
    status_code: 201
    force_basic_auth: yes
  register: registration
  run_once: yes
  delegate_to: localhost
  become: no
  tags:
    - install
    - uninstall

- name: Check currently registered runners (RUN ONCE)
  uri:
    url: "{{ github_api_url }}/orgs/{{ github_owner | default(github_account) }}/actions/runners"
    headers:
      Authorization: "token {{ access_token }}"
      Accept: "application/vnd.github.v3+json"
    method: GET
    status_code: 200
    force_basic_auth: yes
  register: registered_runners
  run_once: yes
  delegate_to: localhost
  become: no
  tags:
    - install
    - uninstall

- name: Check service facts
  service_facts:
  when: ansible_os_family != "Windows"
  tags:
    - install
    - uninstall

- name: Build service name
  set_fact:
    runner_service: "actions.runner.{{ ([( github_owner | default(github_account))[:45], runner_name] | join('.'))[:57]  }}.service"
  when: (service_name is not defined) and (ansible_os_family != "Darwin")
  tags:
    - install
    - uninstall

- name: Build service name
  set_fact:
    runner_service: "actions.runner.{{ ([( github_owner | default(github_account))[:45], runner_name] | join('.'))[:57]  }}"
  when: (service_name is not defined) and (ansible_os_family == "Darwin")
  tags:
    - install
    - uninstall

- name: Build service name
  set_fact:
    runner_service: "{{ service_name }}"
  when: service_name is defined
  tags:
    - install
    - uninstall
